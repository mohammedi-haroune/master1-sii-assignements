ALERT TABLE EMPLOYE ADD CONSTRAINT LIMIT_SALAIRE CHECK(SALAIRE >= 10000 AND SALAIRE <= 30000)


DECLARE
CURSOR EMP IS SELECT NOM FROM NUMEMPLOYE, PRENOMEMP, NOMEMP, SALAIRE FROM EMPLOYE;
POURCENTAGE REAL; 
OLD_SALAIRE REAL;
vide EXCEPTION
BEGIN
ALERT TABLE EMPLOYE DISABLE CONSTAINT LIMIT_SALAIRE
FOR CURR IN EMP LOOP
	OLD_SALAIRE = CURRENT
	IF (CURR.CATEGORIE == 'ASSISTANT') THEN 
	UPDATE EMPLOYE SET SALAIRE = SALAIRE * 1.3 WHERE NUMEMPLOYE = CUREENTEMP
	ELSE IF (CURR.CATEGORIE == 'MECANICIEN') THEN
	UPDATE EMPLOYE SET SALAIRE = SALAIRE * 1.3 WHERE NUMEMPLOYE = CUREENTEMP
	ELSE RAISE vide;

	DBMS_OUTPUT.PUT_LINE('L''employé' || CURR.PRENOMEMP || CURR.NOMEMP || 'de catégorie' || CURR.CATEGORIE || 'son salaire a passé de' || OLD_SALAIRE || 'DA à' || CURR.SALAIRE 'DA');
EXCEPTION WHEN vide THEN 
	DBMS_OUTPUT.PUT_LINE('La catégorie' || CURR.CATEGORIE || 'est inconnue');

END;


CREATE OR REPLACE PROCEDURE NBINTERVENTION(NUMEMPLOYE INTEGER) IS 
CURSOR CR IS SELECT E.NUMEMPLOYE, E.PRENOMEMP, E.NOMEMP, COUNT(*) AS NBINTERVENTION
FROM INTERVENTION, INTERVENTION, EMPLOYE E
WHERE E.NUMEMPLOYE = NUMEMPLOYE
WHERE INTERVENANT.NUMEMPLOYE = NUMEMPLOYE
AND INTERVENANT.NUMINTERVENTION = INTERVENTION.NUMINTERVENTION
GROUP BY NUMEMPLOYE, PRENOMEMP

BEGIN

FOR CURR IN CR LOOP
	DBMS_OUTPUT.PUT_LINE('L’employé' ||  CURR.PRENOMEMP || CURR.NOMEMP 'a fait' || NBINTERVENTION || 'interventions.')
END LOOP;
END;